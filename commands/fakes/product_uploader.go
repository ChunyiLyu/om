// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/pivotal-cf/om/api"
)

type ProductUploader struct {
	UploadStub        func(api.UploadProductInput) (api.UploadProductOutput, error)
	uploadMutex       sync.RWMutex
	uploadArgsForCall []struct {
		arg1 api.UploadProductInput
	}
	uploadReturns struct {
		result1 api.UploadProductOutput
		result2 error
	}
}

func (fake *ProductUploader) Upload(arg1 api.UploadProductInput) (api.UploadProductOutput, error) {
	fake.uploadMutex.Lock()
	fake.uploadArgsForCall = append(fake.uploadArgsForCall, struct {
		arg1 api.UploadProductInput
	}{arg1})
	fake.uploadMutex.Unlock()
	if fake.UploadStub != nil {
		return fake.UploadStub(arg1)
	} else {
		return fake.uploadReturns.result1, fake.uploadReturns.result2
	}
}

func (fake *ProductUploader) UploadCallCount() int {
	fake.uploadMutex.RLock()
	defer fake.uploadMutex.RUnlock()
	return len(fake.uploadArgsForCall)
}

func (fake *ProductUploader) UploadArgsForCall(i int) api.UploadProductInput {
	fake.uploadMutex.RLock()
	defer fake.uploadMutex.RUnlock()
	return fake.uploadArgsForCall[i].arg1
}

func (fake *ProductUploader) UploadReturns(result1 api.UploadProductOutput, result2 error) {
	fake.UploadStub = nil
	fake.uploadReturns = struct {
		result1 api.UploadProductOutput
		result2 error
	}{result1, result2}
}
