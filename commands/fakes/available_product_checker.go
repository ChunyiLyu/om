// This file was generated by counterfeiter
package fakes

import "sync"

type AvailableProductChecker struct {
	CheckProductAvailabilityStub        func(productName string, productVersion string) (bool, error)
	checkProductAvailabilityMutex       sync.RWMutex
	checkProductAvailabilityArgsForCall []struct {
		productName    string
		productVersion string
	}
	checkProductAvailabilityReturns struct {
		result1 bool
		result2 error
	}
}

func (fake *AvailableProductChecker) CheckProductAvailability(productName string, productVersion string) (bool, error) {
	fake.checkProductAvailabilityMutex.Lock()
	fake.checkProductAvailabilityArgsForCall = append(fake.checkProductAvailabilityArgsForCall, struct {
		productName    string
		productVersion string
	}{productName, productVersion})
	fake.checkProductAvailabilityMutex.Unlock()
	if fake.CheckProductAvailabilityStub != nil {
		return fake.CheckProductAvailabilityStub(productName, productVersion)
	} else {
		return fake.checkProductAvailabilityReturns.result1, fake.checkProductAvailabilityReturns.result2
	}
}

func (fake *AvailableProductChecker) CheckProductAvailabilityCallCount() int {
	fake.checkProductAvailabilityMutex.RLock()
	defer fake.checkProductAvailabilityMutex.RUnlock()
	return len(fake.checkProductAvailabilityArgsForCall)
}

func (fake *AvailableProductChecker) CheckProductAvailabilityArgsForCall(i int) (string, string) {
	fake.checkProductAvailabilityMutex.RLock()
	defer fake.checkProductAvailabilityMutex.RUnlock()
	return fake.checkProductAvailabilityArgsForCall[i].productName, fake.checkProductAvailabilityArgsForCall[i].productVersion
}

func (fake *AvailableProductChecker) CheckProductAvailabilityReturns(result1 bool, result2 error) {
	fake.CheckProductAvailabilityStub = nil
	fake.checkProductAvailabilityReturns = struct {
		result1 bool
		result2 error
	}{result1, result2}
}
