// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/pivotal-cf/om/api"
)

type BoshFormService struct {
	GetFormStub        func(path string) (api.Form, error)
	getFormMutex       sync.RWMutex
	getFormArgsForCall []struct {
		path string
	}
	getFormReturns struct {
		result1 api.Form
		result2 error
	}
	ConfigureIAASStub        func(api.ConfigureIAASInput) error
	configureIAASMutex       sync.RWMutex
	configureIAASArgsForCall []struct {
		arg1 api.ConfigureIAASInput
	}
	configureIAASReturns struct {
		result1 error
	}
}

func (fake *BoshFormService) GetForm(path string) (api.Form, error) {
	fake.getFormMutex.Lock()
	fake.getFormArgsForCall = append(fake.getFormArgsForCall, struct {
		path string
	}{path})
	fake.getFormMutex.Unlock()
	if fake.GetFormStub != nil {
		return fake.GetFormStub(path)
	} else {
		return fake.getFormReturns.result1, fake.getFormReturns.result2
	}
}

func (fake *BoshFormService) GetFormCallCount() int {
	fake.getFormMutex.RLock()
	defer fake.getFormMutex.RUnlock()
	return len(fake.getFormArgsForCall)
}

func (fake *BoshFormService) GetFormArgsForCall(i int) string {
	fake.getFormMutex.RLock()
	defer fake.getFormMutex.RUnlock()
	return fake.getFormArgsForCall[i].path
}

func (fake *BoshFormService) GetFormReturns(result1 api.Form, result2 error) {
	fake.GetFormStub = nil
	fake.getFormReturns = struct {
		result1 api.Form
		result2 error
	}{result1, result2}
}

func (fake *BoshFormService) ConfigureIAAS(arg1 api.ConfigureIAASInput) error {
	fake.configureIAASMutex.Lock()
	fake.configureIAASArgsForCall = append(fake.configureIAASArgsForCall, struct {
		arg1 api.ConfigureIAASInput
	}{arg1})
	fake.configureIAASMutex.Unlock()
	if fake.ConfigureIAASStub != nil {
		return fake.ConfigureIAASStub(arg1)
	} else {
		return fake.configureIAASReturns.result1
	}
}

func (fake *BoshFormService) ConfigureIAASCallCount() int {
	fake.configureIAASMutex.RLock()
	defer fake.configureIAASMutex.RUnlock()
	return len(fake.configureIAASArgsForCall)
}

func (fake *BoshFormService) ConfigureIAASArgsForCall(i int) api.ConfigureIAASInput {
	fake.configureIAASMutex.RLock()
	defer fake.configureIAASMutex.RUnlock()
	return fake.configureIAASArgsForCall[i].arg1
}

func (fake *BoshFormService) ConfigureIAASReturns(result1 error) {
	fake.ConfigureIAASStub = nil
	fake.configureIAASReturns = struct {
		result1 error
	}{result1}
}
